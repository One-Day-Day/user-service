plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "org.flywaydb.flyway" version "5.2.4"
    id "org.sonarqube" version "2.7"
    id 'java'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.coveragePlugin", "jacoco"
//            property "sonar.jacoco.reportPath", "build/jacoco/jacocoTest.exec"
        property "sonar.sonar.binaries", "build/classes/main"
        property "sonar.working.directory", "build/reports/sonar"

        property "sonar.coverage.exclusions", [
                'src/main/java/com/okta/sdk/resource/**',
                'src/main/java/com/thoughtworks/gateway/constant/**',
                'src/main/java/com/thoughtworks/gateway/model/**',
                'src/main/java/com/thoughtworks/gateway/dto/**',
                'src/main/java/com/thoughtworks/gateway/event/**',
                'src/main/java/com/thoughtworks/gateway/listener/**',
                'src/main/java/com/thoughtworks/gateway/feign/**',
                'src/main/java/com/thoughtworks/gateway/schedule/**',
                'src/main/java/com/thoughtworks/gateway/*.*'
        ]
    }
}

flyway {
    url = 'jdbc:mysql://127.0.0.1:3306/db_qa?characterEncoding=utf8&useSSL=false'
    user = 'root'
    password = 'root'
    baselineOnMigrate = false
    locations = ['classpath:db/migration/qa']
    schemas = ['db_qa']
}

group = 'com.lovecode.user'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-security'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.10.7'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.10.7'
    runtime group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.10.7'

    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
